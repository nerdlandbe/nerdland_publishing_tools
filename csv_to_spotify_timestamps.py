# This is a script that takes Audobe Audition CSV file output from a project and combines them to a list of Spotify-compatible timestamps
# Jeroen Baert - jeroen [at] nerdland [dot] be

from datetime import datetime, timedelta
import csv
import sys

# Import CSV file as a list-of-lists
def import_csv(filename):
	with open(filename) as csv_file:
		# Read full CSV file
		csv_reader = csv.reader(csv_file, delimiter='\t')
		csv_list = list(csv_reader)
		# Remove empty lists (generated by empty lines in the CSV)
		csv_list_stripped = []
		for item in csv_list:
			if len(item) > 0:
				csv_list_stripped.append(item)
	return csv_list_stripped

# Convert Adobe Audition time strings to list of hour, minute second
def to_timestamp(time):
	# find out if the input contains hours or not by counting the ":"
	if time.count(":") == 2:
		t = datetime.strptime(time, "%H:%M:%S.%f")
	else:
		t = datetime.strptime(time, "%M:%S.%f")
	timestamp = [t.hour, t.minute, t.second]
	return timestamp

# Convert list of processed CSV markers to HTML <ul>
def to_spotify(marker_list):
	spotify_output = []
	for i in marker_list:
		topic = i[0].strip()
		timestamp = i[1]
		tstring = f'{timestamp[0]:02d}' + ":" + f'{timestamp[1]:02d}' + ":" + f'{timestamp[2]:02d}'
		spotify_output.append("("+ tstring +") " + topic)
	return spotify_output

def main():
	if (len(sys.argv) != 2):
		print("ERROR: I need at least one argument: <path to csv file>s")
		return

	file = sys.argv[1]

	# import CSV output from Adobe Audition
	marker_list = import_csv(file)
	# get rid of first line (columns)
	marker_list = marker_list[1:]
	# only retain first two items per line (item name and timestamp)
	processed_marker_list = []
	for i in marker_list:
		i[1] = to_timestamp(i[1])
		processed_marker_list.append(i[0:2])
	spotify_list = to_spotify(processed_marker_list)
	# also print intro
	print('(00:00:00) Intro')
	for i in spotify_list:
		print(i)

if __name__ == "__main__":
	main()
